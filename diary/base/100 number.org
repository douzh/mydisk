* 正数和负数的二进制表示形式以及关系

15 的原码： 00000000 00000000 00000000 00001111 
    补码： 11111111 11111111 11111111 11110000
                 +1 = 
-15的原码：11111111 11111111 11111111 11110001

负数的原码即为：正数的原码取反，再加1。

* JAVA位操作

& | ~ ^

<< >> >>>

>>> 位移高位补0，>>位移高位负数补1

只针对 int类型的数据有效，java中，一个int的长度始终是32位，也就是4个字节,它操作的都是该整数的二进制数。

也可以作用于以下类型，即 byte，short，char，long(当然，它们都是整数形式)。当为这四种类型是，JVM先把它们转换成int型再进行操作。

long res = ((long) (bKey[3] & 0xFF) << 24) | ((long) (bKey[2] & 0xFF) << 16)
          | ((long) (bKey[1] & 0xFF) << 8) | (long) (bKey[0] & 0xFF);



